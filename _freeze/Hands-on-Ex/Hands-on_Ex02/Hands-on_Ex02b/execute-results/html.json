{
  "hash": "7f3c0ee9a43e150ddf080ab2fef374eb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Excercise 2b\"\ndate: \"5/9/25\"\ndate-modified: \"last-modified\"\nformat: html\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n# **5  2nd Order Spatial Point Patterns Analysis Methods**\n\ninvestigating clustering, dispersion, or randomness at various spatial scales.\n\nThe specific questions we would like to answer are as follows:\n\n-   are the childcare centres in Singapore randomly distributed throughout the country?\n\n-   if the answer is not, then the next logical question is where are the locations with higher concentration of childcare centres?\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spatstat, tmap, tidyverse, rvest)\n```\n:::\n\n\n## Loading Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_sf <- st_read(\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\") %>% \n  st_zm(drop = TRUE, what = \"ZM\") %>% st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\farhanlion\\ISS626\\Hands-on-Ex\\Hands-on_Ex02\\data\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nNext, build a function called *extract_kml_field* for extracting REGION_N, PLN_AREA_N, SUBZONE_N, SUBZONE_C from Description field by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextract_kml_field <- function(html_text, field_name) {\n  if (is.na(html_text) || html_text == \"\") return(NA_character_)\n  \n  page <- read_html(html_text)\n  rows <- page %>% html_elements(\"tr\")\n  \n  value <- rows %>%\n    keep(~ html_text2(html_element(.x, \"th\")) == field_name) %>%\n    html_element(\"td\") %>%\n    html_text2()\n  \n  if (length(value) == 0) NA_character_ else value\n}\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_sf <- mpsz_sf %>%\n  mutate(\n    REGION_N = map_chr(Description, extract_kml_field, \"REGION_N\"),\n    PLN_AREA_N = map_chr(Description, extract_kml_field, \"PLN_AREA_N\"),\n    SUBZONE_N = map_chr(Description, extract_kml_field, \"SUBZONE_N\"),\n    SUBZONE_C = map_chr(Description, extract_kml_field, \"SUBZONE_C\")\n  ) %>%\n  select(-Name, -Description) %>%\n  relocate(geometry, .after = last_col())\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_cl <- mpsz_sf %>% filter(SUBZONE_N != \"SOUTHERN GROUP\", PLN_AREA_N != \"WESTERN ISLANDS\", PLN_AREA_N != \"NORTH-EASTERN ISLANDS\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(mpsz_cl, \n          \"data/mpsz_cl.rds\")\n```\n:::\n\n\nNext, code chunk below will be used to import the childcare Service data downloaded from data.gov.sg into R environment as sf data frame called *chilcare_sf*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcare_sf <- st_read(\"data/ChildCareServices.kml\") %>% \n  st_zm(drop = TRUE, what = \"ZM\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `CHILDCARE' from data source \n  `C:\\farhanlion\\ISS626\\Hands-on-Ex\\Hands-on_Ex02\\data\\ChildCareServices.kml' \n  using driver `KML'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n## Plotting\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_sf) +\n  tm_polygons() +\ntm_shape(childcare_sf) +\n  tm_dots()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n### **5.6.1 Choa Chu Kang planning area**\n\nThe **G-function** describes the distribution of distances from each event to its **nearest neighboring event**. In this section, you will learn how to:\n\n-   Estimate the G-function using the `Gest()` function in the **spatstat** package.\n\n-   Carry out a **Monte Carlo simulation test** with the `envelope()` function in **spatstat** to assess whether the observed pattern differs from complete spatial randomness.\n\n\n\n#### 5.6.1.1 Computing G-function estimation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nck <- mpsz_cl %>%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\nck_owin = as.owin(ck)\nchildcare_sf <- st_read(\"data/ChildCareServices.kml\") %>% \n  st_zm(drop = TRUE, what = \"ZM\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `CHILDCARE' from data source \n  `C:\\farhanlion\\ISS626\\Hands-on-Ex\\Hands-on_Ex02\\data\\ChildCareServices.kml' \n  using driver `KML'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nchildcare_ppp <- as.ppp(childcare_sf)\nchildcare_ck_ppp = childcare_ppp[ck_owin]\n\n\ntm <- mpsz_cl %>%\n  filter(PLN_AREA_N == \"TAMPINES\")\ntm_owin = as.owin(tm)\nchildcare_tm_ppp = childcare_ppp[tm_owin]\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n#### 5.6.1.2 Performing Complete Spatial Randomness Test\n\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\n\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\n\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\n\nMonte Carlo test with G-fucntion\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_CK.csr <- envelope(childcare_ck_ppp, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(G_CK.csr)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### **5.6.2 Tampines planning area**\n\n#### 5.6.2.1 Computing G-function estimation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n#### 5.6.2.2 Performing Complete Spatial Randomness Test\n\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Tampines are randomly distributed.\n\nH1= The distribution of childcare services at Tampines are not randomly distributed.\n\nThe null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.\n\nThe code chunk below is used to perform the hypothesis testing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_tm.csr <- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(G_tm.csr)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n## **5.7 Analysing Spatial Point Process Using F-Function**\n\nThe F function estimates the empty space function F(r) or its hazard rate h(r) from a point pattern in a window of arbitrary shape. In this section, you will learn how to compute F-function estimation by using [*Fest()*](https://rdrr.io/cran/spatstat/man/Fest.html) of **spatstat** package. You will also learn how to perform monta carlo simulation test using [*envelope()*](https://rdrr.io/cran/spatstat/man/envelope.html) of **spatstat** package.\n\n### **5.7.1 Choa Chu Kang planning area**\n\n#### 5.7.1.1 Computing F-function estimation\n\nThe code chunk below is used to compute F-function using *Fest()* of **spatat** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n### **5.7.2 Performing Complete Spatial Randomness Test**\n\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\n\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\n\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\n\nMonte Carlo test with F-fucntion\n\n\n::: {.cell}\n\n```{.r .cell-code}\nF_CK.csr <- envelope(childcare_ck_ppp, Fest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(F_CK.csr)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n### **5.7.3 Tampines planning area**\n\n#### 5.7.3.1 Computing F-function estimation\n\nMonte Carlo test with F-fucntion\n\n\n::: {.cell}\n\n```{.r .cell-code}\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n#### 5.7.3.2 Performing Complete Spatial Randomness Test\n\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Tampines are randomly distributed.\n\nH1= The distribution of childcare services at Tampines are not randomly distributed.\n\nThe null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.\n\nThe code chunk below is used to perform the hypothesis testing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nF_tm.csr <- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(F_tm.csr)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n**G-function** (nearest-neighbor distances from points) “From the centres’ perspective — how close are they to each other?”\n\n**F-function** (empty space distances from random locations)“From the landscape’s perspective — how close is a random location to a centre?”\n\n-   If the black F curve lies **above the envelope**, random locations are closer to centres than expected → **clustered pattern**.\n\n<!-- -->\n\n-   If the black F curve lies **below the envelope**, random locations are further away than expected → **regular spacing**.\n\n-   If it stays **inside the envelope**, the pattern is consistent with CSR (random).\n\n## **5.8 Analysing Spatial Point Process Using K-Function**\n\nK-function measures the number of events found up to a given distance of any particular event. In this section, you will learn how to compute K-function estimates by using [*Kest()*](https://rdrr.io/cran/spatstat/man/Kest.html) of **spatstat** package. You will also learn how to perform monta carlo simulation test using *envelope()* of spatstat package.\n\n### **5.8.1 Choa Chu Kang planning area**\n\n#### 5.8.1.1 Computing K-fucntion estimate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n#### 5.8.1.2 Performing Complete Spatial Randomness Test\n\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\n\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\n\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\n\nThe code chunk below is used to perform the hypothesis testing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_ck.csr <- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n### **5.8.2 Tampines planning area**\n\n#### 5.8.2.1 Computing K-fucntion estimation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n#### 5.8.2.2 Performing Complete Spatial Randomness Test\n\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Tampines are randomly distributed.\n\nH1= The distribution of childcare services at Tampines are not randomly distributed.\n\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\n\nThe code chunk below is used to perform the hypothesis testing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_tm.csr <- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n## **5.9 Analysing Spatial Point Process Using L-Function**\n\nIn this section, you will learn how to compute L-function estimation by using [*Lest()*](https://rdrr.io/cran/spatstat/man/Lest.html) of **spatstat** package. You will also learn how to perform monta carlo simulation test using *envelope()* of spatstat package.\n\n### **5.9.1 Choa Chu Kang planning area**\n\n#### 5.9.1.1 Computing L Fucntion estimation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n#### 5.9.1.2 Performing Complete Spatial Randomness Test\n\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\n\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\n\nThe null hypothesis will be rejected if p-value if smaller than alpha value of 0.001.\n\nThe code chunk below is used to perform the hypothesis testing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nL_ck.csr <- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n### **5.9.2 Tampines planning area**\n\n#### 5.9.2.1 Computing L-fucntion estimate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n#### 5.9.2.2 Performing Complete Spatial Randomness Test\n\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Tampines are randomly distributed.\n\nH1= The distribution of childcare services at Tampines are not randomly distributed.\n\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\n\nThe code chunk below will be used to perform the hypothesis testing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nL_tm.csr <- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02b_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n### Spatial Point Pattern Summary Functions\n\n#### G-function (Nearest-Neighbor Distribution)\n\n-   Perspective: From **points** themselves\n-   Question: How far is each point to its nearest neighbor?\n-   Interpretation:\n    -   Faster rise than CSR → **clustering**\n    -   Slower rise than CSR → **regularity/dispersion**\n-   R function: `Gest()`\n\n#### F-function (Empty Space Function)\n\n-   Perspective: From **random locations**\n-   Question: How far is a random location to the nearest point?\n-   Interpretation:\n    -   Above CSR → **clustering**\n    -   Below CSR → **regularity**\n-   R function: `Fest()`\n\n#### K-function (Ripley’s K)\n\n-   Perspective: From **all points**\n-   Question: How many neighbors lie within distance *r* compared to CSR?\n-   Interpretation:\n    -   Above CSR → **clustering**\n    -   Below CSR → **regularity**\n-   R function: `Kest()`\n\n#### L-function (Besag’s L)\n\n-   Perspective: From **all points**\n-   Formula: L(r) = sqrt(K(r)/π)\n-   Question: Linearized version of K for easier interpretation\n-   Interpretation:\n    -   L(r) – r \\> 0 → **clustering**\n    -   L(r) – r \\< 0 → **regularity**\n-   R function: `Lest()`\n",
    "supporting": [
      "Hands-on_Ex02b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}